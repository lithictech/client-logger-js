!function(e,n){void 0===e&&void 0!==window&&(e=window),"function"==typeof define&&define.amd?define([],(function(){return e.structuredClientLogging=n()})):"object"==typeof module&&module.exports?module.exports=n():e.structuredClientLogging=n()}(this,(function(){"use strict";function e(){for(var e={},n=0;n<arguments.length;n++){var o=arguments[n];for(var t in o)o.hasOwnProperty(t)&&(e[t]=o[t])}return e}var n,o,t,r=null,i=[],l=null;function u(){if(0!==i.length)if(t){var r=e(n,{lines:i});i=[],t(r)}else{var l=i.length-o;l>0&&(console.log("WARNING: Dropping "+l+" logs because logging is not configured"),i=i.slice(l,l+o))}}var d={configure:function(e){if((e=e||{}).disabled)return r=!0,n=null,t=null,i=[],void(l&&window.clearInterval(l));n=e.requestFields||{},o=e.lineBuffer||50,t=e.sendLogs?e.sendLogs:function(n){return fetch(e.endpoint,{method:"POST",mode:"cors",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}).catch((function(e){console.error("Failed to send logs:",e)}))},null!==l&&window.clearInterval(l),l=window.setInterval(u,e.interval||1e4)},createLogger:function n(t,l){function d(n){return function(d,c){r||(i.push({logger:t,at:(new Date).toISOString(),level:n,event:d,context:e(l,c)}),i.length>=o&&u())}}return{debug:d("debug"),info:d("info"),warn:d("warn"),error:d("error"),bind:function(o){return n(t,e(l,o))}}},flush:u};return"object"==typeof module&&module.exports&&(module.exports=d),d}));