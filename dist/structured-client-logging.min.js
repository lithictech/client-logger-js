!function(e,n){void 0===e&&void 0!==window&&(e=window),"function"==typeof define&&define.amd?define([],(function(){return e.structuredClientLogging=n()})):"object"==typeof module&&module.exports?module.exports=n():e.structuredClientLogging=n()}(this,(function(){"use strict";function e(){for(var e={},n=0;n<arguments.length;n++){var r=arguments[n];for(var o in r)r.hasOwnProperty(o)&&(e[o]=r[o])}return e}var n,r,o,t=null,i=[],u=null;function l(){if(0===i.length)return Promise.resolve();if(!o){var t=i.length-r;return t>0&&(console.log("WARNING: Dropping "+t+" logs because logging is not configured"),i=i.slice(t,t+r)),Promise.resolve()}var u=e(n,{lines:i});return i=[],o(u)}var s={configure:function(e){if((e=e||{}).disabled)return t=!0,n=null,o=null,i=[],void(u&&clearInterval(u));n=e.requestFields||{},r=e.lineBuffer||50,o=e.sendLogs?e.sendLogs:function(n){return fetch(e.endpoint,{method:"POST",mode:"cors",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}).catch((function(e){return console.error("Failed to send logs:",e),Promise.reject(e)}))},null!==u&&clearInterval(u),u=setInterval(l,e.interval||1e4)},createLogger:function n(o,u){function s(n){return function(s,c){t||(i.push({logger:o,at:(new Date).toISOString(),level:n,event:s,context:e(u,c)}),i.length>=r&&l())}}return{debug:s("debug"),info:s("info"),warn:s("warn"),error:s("error"),bind:function(r){return n(o,e(u,r))}}},flush:l};return"object"==typeof module&&module.exports&&(module.exports=s),s}));